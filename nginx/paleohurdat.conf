# Redirect all non-encrypted to encrypted
server {
    server_name paleohurdat.whoi.edu;
    listen 80;
    return 302 https://paleohurdat.whoi.edu$request_uri;
}

# now we declare our https main server

server {
    server_name paleohurdat.whoi.edu;
    listen 443 ssl;  # <-

    ssl_certificate /etc/ssl/whoi_certs/habhub.whoi.edu.crt;  # <-
    ssl_certificate_key /etc/ssl/whoi_certs/habhub.whoi.edu.key;  # <-

    client_max_body_size 50M;

    # this is the internal Docker DNS, cache only for 30s
    # use variable and resolver to keep nginx from not starting if no upstream server
    resolver 127.0.0.11 valid=30s;

    location  /services {
        set $upstream_service http://paleohurdat_django:8000;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;  # <-
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_set_header SCRIPT_NAME /services;
        if (!-f $request_filename) {
            proxy_pass $upstream_service; # <- Use container name from DOCKER COMPOSE file
            break;
        } 
    }

    location /media {
        alias /app/media/;
    }

    location / {
        set $upstream_service http://paleohurdat_react:3000;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;  # <-
        proxy_set_header Host $http_host;
        proxy_redirect off;

        proxy_pass $upstream_service;
    }
}